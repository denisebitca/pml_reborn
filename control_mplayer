#!/bin/bash

#
#  _____    __  __   _                 _____    ______   ____     ____    _____    _   _ 
# |  __ \  |  \/  | | |               |  __ \  |  ____| |  _ \   / __ \  |  __ \  | \ | |
# | |__) | | \  / | | |               | |__) | | |__    | |_) | | |  | | | |__) | |  \| |
# |  ___/  | |\/| | | |               |  _  /  |  __|   |  _ <  | |  | | |  _  /  | . ` |
# | |      | |  | | | |____           | | \ \  | |____  | |_) | | |__| | | | \ \  | |\  |
# |_|      |_|  |_| |______|          |_|  \_\ |______| |____/   \____/  |_|  \_\ |_| \_|
#                             ______                                                     
#                            |______|                                                    
#
# < --- under the GPLv3 license / https://github.com/denisebitca/pml_reborn --- >
# < --- based on jmaia's work available at https://github.com/jerem-ma/pimp_my_lock --->
#
# timing might be a little off, if anyone wants to test the script on 42Paris Macs,
# it would be kind
#
#

# LD_LIBRARY_PATH for xdotool
export LD_LIBRARY_PATH=$PWD/lib

# PATH for ease of writing
export PATH=$PATH:$PWD/bin

# PATH / URL
MEDIA_URL=$1

talk()
{
	cat <(echo "$1") | nc -q 1 -U /tmp/mplay_ft_lock
}

# Communicating with mplayer using a IPC socket

talk "stop"
talk "loadfile $MEDIA_URL"
# Waiting for the window to respawn so that overrideredirect can be applied
# (allows the window to be in front of ft_lock)
#
# Taken partially from https://askubuntu.com/questions/885034/how-can-i-wait-until-an-application-has-started 

while true
do
    windows=$(xwininfo -name "pml_reborn" 2>&1)
    if [[ "$windows" != "xwininfo: error: No window with name \"pml_reborn\" exists!" ]];
    then
		sleep 2
		ID=$(xwininfo -name "pml_reborn" | grep "pml_reborn" | cut -d' ' -f4)
		xdotool set_window --overrideredirect 1 "$ID"
		xdotool windowunmap "$ID"
		xdotool windowmap "$ID"
		talk "seek 0 exact"
        break
    fi
done
